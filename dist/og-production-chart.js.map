{"version":3,"sources":["og-production-chart.es6.js"],"names":["Polymer","is","listeners","properties","labels","type","Array","value","unit","String","width","Number","height","legendDispVal","data","observer","selected","_setLegend","me","forEach","_item","idx","legend","attached","_notifyAttached","fire","_isMultipleData","length","_isSingleData"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQ,CAENC,GAAI,qBAFE,CAINC,UAAW,EAJL,CAQNC,WAAY,CACV;;;;QAKAC,OAAQ,CACNC,KAAMC,KADA,CAENC,KAFM,iBAEE,CACX,MAAO,CACN,KADM,CACC,SADD,CACY,SADZ,CAGP,CANS,CANE,CAcb;;;;QAKGC,KAAM,CACJH,KAAMI,MADF,CAEJF,MAAO,gBAFH,CAnBI,CAuBb;;;;QAKGG,MAAO,CACLL,KAAMM,MADD,CAELJ,MAAO,GAFF,CA5BG,CAgCb;;;;QAKGK,OAAQ,CACNP,KAAMM,MADA,CAENJ,MAAO,GAFD,CArCE,CAyCb;;;;;QAMAM,cAAe,CACdR,KAAMC,KADQ,CAEVC,KAFU,iBAEF,CACX,MAAO,EACP,CAJa,CA/CF,CAqDb;;;;;;QAOAO,KAAM,CACLT,KAAMC,KADD,CAELC,KAFK,iBAEG,CACP,MAAO,EACP,CAJI,CAKDQ,SAAU,YALT,CA5DO,CAmEbC,SAAU,CACTX,KAAMM,MADG,CAETJ,MAAO,CAFE,CAnEG,CARN,CAiFNU,UAjFM,qBAiFKH,IAjFL,CAiFW,CACf,GAAII,IAAK,IAAT,CACAJ,KAAKK,OAAL,CAAa,SAACC,KAAD,CAAQC,GAAR,CAAgB,CAC3BD,MAAME,MAAN,CAAeJ,GAAGL,aAAH,CAAiBQ,GAAjB,CAChB,CAFD,CAGD,CAtFK,CAwFNE,QAxFM,oBAwFK,CACT,KAAKC,eAAL,EACD,CA1FK,CA4FNA,eA5FM,2BA4FY,CAChB;;;;SAKA,KAAKC,IAAL,CAAU,UAAV,CAAsB,EAAtB,CACD,CAnGK,CAqGNC,eArGM,0BAqGUZ,IArGV,CAqGgB,CACpB,MAAOA,MAAKa,MAAL,CAAc,CACtB,CAvGK,CAyGNC,aAzGM,wBAyGQd,IAzGR,CAyGc,CAClB,MAAOA,MAAKa,MAAL,GAAgB,CACxB,CA3GK,CAAR,CA6GD,CA9GD","file":"og-production-chart.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'og-production-chart',\n\n    listeners: {\n\n    },\n\n    properties: {\n      /**\n      * This property is a list of tab labels\n      *\n      * @property labels\n      */\n      labels: {\n        type: Array,\n        value() {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t\"All\", \"Train 1\", \"Train 2\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n      * Unit for Y-Axis values\n      *\n      * @property unit\n      */\n      unit: {\n        type: String,\n        value: \"Metric ton/day\"\n\t\t\t},\n\t\t\t/**\n      * Chart Width\n      *\n      * @property width\n      */\n      width: {\n        type: Number,\n        value: 960\n\t\t\t},\n\t\t\t/**\n      * Chart Height\n      *\n      * @property height\n      */\n      height: {\n        type: Number,\n        value: 300\n\t\t\t},\n\t\t\t/**\n      * The Actual, Target and design values to be displayed in the legend\n      *\n      * @property legendDispVal\n      [{\"actual\": 1302, \"target\": 1212, \"design\": 1400}]\n      */\n\t\t\tlegendDispVal: {\n\t\t\t\ttype: Array,\n        value() {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t* This property is an Array of tab data.\n\t\t\tMember of each tab data looks like this\n\t\t\t`{\"date\":\"25-Apr-17\",\"actual\":\"11960\",\"target\":\"12950\",\"design\":\"13960\"}`\n      *\n      * @property data\n      */\n\t\t\tdata: {\n\t\t\t\ttype: Array,\n\t\t\t\tvalue() {\n\t\t\t\t\treturn [];\n\t\t\t\t},\n        observer: \"_setLegend\"\n\t\t\t},\n\t\t\tselected: {\n\t\t\t\ttype: Number,\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\n    _setLegend(data) {\n      let me = this;\n      data.forEach((_item, idx) => {\n        _item.legend = me.legendDispVal[idx];\n      });\n    },\n\n    attached() {\n      this._notifyAttached();\n    },\n\n    _notifyAttached() {\n      /**\n       * Event fired when the component is attached\n       *\n       * @event attached\n       */\n      this.fire('attached', {});\n    },\n\n    _isMultipleData(data) {\n      return data.length > 1;\n    },\n\n    _isSingleData(data) {\n      return data.length === 1;\n    }\n  });\n})();\n"]}