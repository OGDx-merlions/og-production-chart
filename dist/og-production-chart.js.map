{"version":3,"sources":["og-production-chart.es6.js"],"names":["Polymer","is","listeners","properties","labels","type","Array","value","unit","String","width","Number","height","legendLabels","data","dateRange","Object","chartTypes","axisConfigs","filteredData","computed","selected","attached","rangeParse","d3","timeParse","_notifyAttached","fire","_isMultipleData","length","_isSingleData","_filterDates","Px","from","to","filtered","forEach","arr","idx","_tmp","filter","_obj","date","getTime","chartType","push"],"mappings":"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","file":"og-production-chart.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'og-production-chart',\n\n    listeners: {\n\n    },\n\n    properties: {\n      /**\n      * This property is a list of tab labels\n      *\n      * @property labels\n      */\n      labels: {\n        type: Array,\n        value() {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t\"All\", \"Train 1\", \"Train 2\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n      * Unit for Y-Axis values\n      *\n      * @property unit\n      */\n      unit: {\n        type: String,\n        value: \"Metric ton/day\"\n\t\t\t},\n\t\t\t/**\n      * Chart Width\n      *\n      * @property width\n      */\n      width: {\n        type: Number,\n        value: 960\n\t\t\t},\n\t\t\t/**\n      * Chart Height\n      *\n      * @property height\n      */\n      height: {\n        type: Number,\n        value: 300\n\t\t\t},\n\t\t\t/**\n      * The Actual, Target and design values to be displayed in the legend\n      *\n      * @property legendLabels\n      [\"Actual\", \"Target\", \"Forecast\", \"Design Capacity\"]\n      */\n\t\t\tlegendLabels: {\n\t\t\t\ttype: Array,\n        value() {\n\t\t\t\t\treturn [\"Actual\", \"Target\", \"Forecast\", \"Design Capacity\"];\n\t\t\t\t}\n      },\n\t\t\t/**\n\t\t\t* This property is an Array of tab data.\n\t\t\tMember of each tab data looks like this\n\t\t\t`{\"date\":\"2017-05-01T16:00:00.000Z\",\"actual\":\"11960\",\"target\":\"12950\",\"design\":\"13960\"}`\n      *\n      * @property data\n      */\n\t\t\tdata: {\n\t\t\t\ttype: Array,\n\t\t\t\tvalue() {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n      },\n\t\t\t/**\n\t\t\t* The Date range to filter the data. Format as specified in the px-rangepicker\n\t\t\tEg:\n\t\t\t`{\"from\":\"2017-04-03T03:37:25.000Z\",\"to\":\"2017-10-26T03:37:25.000Z\"}`\n      *\n      * @property dateRange\n      */\n      dateRange: {\n        type: Object,\n        value() {\n          return {};\n        }\n      },\n      /**\n       * Array of chart Types.\n       * Eg: [\"line\", \"area\", \"line\"]\n       * @property chartTypes\n       */\n      chartTypes: {\n\t\t\t\ttype: Array,\n\t\t\t\tvalue: () => {\n          return [];\n        }\n      },\n      /**\n       * Array of Axis Configurations\n       * Eg: [{\n\t\t\t\t\t\t\"x\": {\n\t\t\t\t\t\t\t\"tickFormat\": \"\",\n\t\t\t\t\t\t\t\"inputTimeFormat\": \"%Y-%m-%dT%H:%M:%S.%LZ\",\n\t\t\t\t\t\t\t\"tickTimeFormat\": \"%d %b %y\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"y\": {\n\t\t\t\t\t\t\t\"tickFormat\": \".3s\",\n\t\t\t\t\t\t\t\"hideGrid\": true,\n\t\t\t\t\t\t\t\"dotRadius\": 0,\n\t\t\t\t\t\t\t\"start\": 600\n\t\t\t\t\t\t}\n\t\t\t\t\t}, null, null]\n       * @property axisConfigs\n       */\n\t\t\taxisConfigs: {\n\t\t\t\ttype: Array,\n\t\t\t\tvalue: () => {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n      filteredData: {\n        type: Array,\n        computed: '_filterDates(data, dateRange)'\n      },\n\t\t\tselected: {\n\t\t\t\ttype: Number,\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\n    attached() {\n      this.rangeParse = d3.timeParse(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n      this._notifyAttached();\n    },\n\n    _notifyAttached() {\n      /**\n       * Event fired when the component is attached\n       *\n       * @event attached\n       */\n      this.fire('attached', {});\n    },\n\n    _isMultipleData(data) {\n      return data.length > 1;\n    },\n\n    _isSingleData(data) {\n      return data.length === 1;\n    },\n    _filterDates(data, dateRange) {\n      if(!data || !data.length || !dateRange) {\n        return data;\n      }\n      const d3 = Px.d3;\n      const from = this.rangeParse(dateRange.from);\n      const to = this.rangeParse(dateRange.to);\n      let filtered = [];\n      this.chartTypes = this.chartTypes ? this.chartTypes : [];\n      this.axisConfigs = this.axisConfigs ? this.axisConfigs : [];\n      data.forEach((arr, idx)=> {\n        let _tmp = arr.filter((_obj) => {\n          if(!_obj.date) {\n            return false;\n          }\n          const date = _obj.date.getTime ? _obj.date : this.rangeParse(_obj.date);\n          return date.getTime() >= from.getTime() \n            && date.getTime() <= to.getTime();\n        });\n        _tmp.chartType = this.chartTypes.length > idx ? this.chartTypes[idx] : \"\";\n        _tmp.chartType = _tmp.chartType ? _tmp.chartType : \"\";\n\n        _tmp.axisConfigs = this.axisConfigs.length > idx ? this.axisConfigs[idx] : \"\";\n        _tmp.axisConfigs = _tmp.axisConfigs ? _tmp.axisConfigs : \"\";\n        filtered.push(_tmp);\n      });\n      return filtered;\n    }\n  });\n})();\n"]}